# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth : 0 #disable shallow clone
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: SonarQube Cloud Scan
      env:
        GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
      run : |
          mvn clean verify sonar:sonar \
          -Dsonar.organization=riccardoregina \
          -Dsonar.projectKey=riccardoregina_ci-pipeline-example \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.jacoco.reportPaths=target/jacoco.exec
      
    - name: Check SonarCloud Quality Gate status
      uses: wzieba/SonarCloudQualityGateAction@v2
      with:
        sonar_token: ${{ secrets.SONAR_TOKEN }}
        sonar_host: https://sonarcloud.io
        organization: your-sonarcloud-organization
        projectKey: your-project-key
      continue-on-error: false  # This will fail the pipeline if the quality gate fails

